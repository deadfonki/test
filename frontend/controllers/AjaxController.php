<?php/** * Created by PhpStorm. * User: kk * Date: 30.10.2017 * Time: 15:34 */namespace frontend\controllers;use common\models\User;use frontend\models\Members;use frontend\models\Vote;use frontend\models\Votes;use frontend\models\Winners;use frontend\models\Words;use yii\filters\VerbFilter;use yii\web\Controller;class AjaxController extends Controller{    public function beforeAction($action)    {            $this->enableCsrfValidation = false;        return parent::beforeAction($action);    }    public function actionCreate()    {        if (\Yii::$app->request->isAjax) {            $s = \Yii::$app->request->post('s');            $f = \Yii::$app->request->post('f');            if (\Yii::$app->db->createCommand()->insert('vote', ['aid' => \Yii::$app->user->id,'p1' => $f, 'p2' => $s])->execute()) {                $vote = Vote::findOne(['state' => 0]);                return $vote['id'];            }        }    }    public function actionUpdate()    {    $vote = Vote::find()->where(['state' => 0])->orWhere(['state' => 1])->orWhere(['state' => 2])->one();        if (!$vote == null)        {            return true;        }        else        {            return false;        }    }    public function actionUpd()    {        $vote = Vote::find()->orderBy(['id' => SORT_DESC])->one();        $votes = Votes::findOne(['game_id' => $vote['id'],'user_id' => \Yii::$app->user->id]);        if ($vote != null) {            if ($vote['state'] == 0) {                $hour = date('G')+3;                $minute = '00';                echo '<select id="dd" class="col-md-12 col-xs-12 col-sm-12">';                while ($hour < 24) {                    if ($minute < 45) {                        $minute += 15;                        echo '<option value="' . $hour . ':' . $minute . '">' . $hour . ':' . $minute . '</option>';                    } else {                        $hour++;                        $minute = '00';                        echo '<option value="' . $hour . ':' . $minute . '">' . $hour . ':' . $minute . '</option>';                    }                }                echo '</select>';                echo '<input id="name" oninput="predicts()" type="text" class="form-control" placeholder="Мероприятие">';               echo '<div class="dd col-md-12 col-xs-12 col-sm-12" style="height: auto;z-index: 99">                                    </div>';                if ($votes != null)                {                    echo '<input disabled type="submit" id="votebtn" class="btn col-md-12 col-xs-12 col-sm-12"><span id="timer"></span><span id="ucount"></span>';                }                else                {                    echo '<input type="submit" onclick="vote()" id="votebtn" class="btn col-md-12 col-xs-12 col-sm-12"><span id="timer"></span><span id="ucount"></span>';                }            }            else if($vote['state'] == 1)            {                echo '<script>var data = {  labels:[],     datasets: [{            label: "dataset",            backgroundColor: ["rgb(255, 99, 132)","rgb(255, 99, 33)","rgb(150, 255, 50)","rgb(255, 150, 33)"],            borderColor: \'rgb(255, 99, 132)\',            data: [],        }],};</script>';                $v = [];                $vo = Votes::find()->where(['game_id' => $vote['id']])->all();                $se = [];                for ($i = 0; $i < count($vo); $i++) {                    array_push($se,array($vo[$i]['time'] => $vo[$i]['time']));                }                if ($vo != null) {                    $count = 0;                    if (count($se) > 4)                    {                        $count = 4;                    }                    else                    {                        $count=count($se);                    }                    for ($i = 0; $i < $count; $i++) {                        $ti = array_values($se[$i]);                        $ve = Votes::find()->where(['game_id' => $vote['id'],'time' => $ti])->all();                        $string = "";                        for ($j =0;$j < count($ve);$j++)                        {                            if ($j == 0)                            {                                $string .= $ve[$j]['name'];                            }                            else                            {                                $string .= " ".$ve[$j]['name'];                            }                        }                        array_push($v, ['times' => count($ve), 'time' => $ti[0]]);                        $ka =  $v[$i]['time'].':'.$string;                        echo '<script>data["labels"].push(\'' . $ka. '\');data.datasets[0].data.push(\'' . $v[$i]['times'].'\');</script>';                    }                    echo '<center><canvas id="myChart" height="500" width="500" ></canvas></center><script>var ctx = document.getElementById("myChart").getContext(\'2d\');var options = { legend: {            display: false         },maintainAspectRatio:true,         responsive:false,         };var myChart = new Chart(ctx, {     type: \'pie\',    data: data,    options: options});</script>';                    if ($votes != null)                    {                        echo '<span id="timer"></span><span id="ucount"></span>';                        $vo = Votes::find()->where(['game_id' => $vote['id']])->all();                        $names = [];                        $times =[];                        for ($i = 0; $i < count($vo); $i++) {                            array_push($names,array($vo[$i]['name'] => $vo[$i]['name']));                            array_push($times,array($vo[$i]['time'] => $vo[$i]['time']));                        }                        $counts = 0;                        $times = array_values($times);                        for ($i = 0; $i < count($times); $i++) {                            $ti = array_values($names[$i]);                            $si = array_values($times[$i]);                            $v = Votes::find()->where(['game_id' => $vote['id'],'name' => $ti,                                'time' => $si])->all();                            $c = count($v);                            if ($c > $counts)                            {                                $counts = $c;                                $winner = $v[$i]['id'];                            }                        }                        \Yii::$app->db->createCommand()->update('votes',['won' => 1],['id' => $winner])->execute();                        $mem = Votes::findOne(['won' => 1]);                            $vs = Votes::find()->where(['name' => $mem['name']])->all();                            foreach ($vs as $v)                            {                                $mems = Members::findOne(['game_id' => $v['game_id'],'user_id' => $v['user_id']]);                                if ($mems == null)                                {                                    \Yii::$app->db->createCommand()->insert('members',['game_id' => $v['game_id'],'user_id' => $v['user_id']])->execute();                                }                            }                        $vs = Votes::findOne(['id' => $winner]);                        echo '<div>Победил вариант с временем '.' '.$vs['time'].' '.'и выбранным мероприятием '.$vs['name'].' </div>';                        echo '<center><span>Участники:</span></center>';                        foreach ($vo as $vot)                        {                            $user = User::findOne(['id' => $vot['user_id']]);                            echo '<div class="col-md-2 col-xs-2 col-sm-2"> '.$user['username'].'</div>';                        }                        echo '<script>setTimeout(hidediagram,5000)</script>';                    }                    else                    {                    }                }                else                {                    \Yii::$app->db->createCommand()->update('vote',['state' => 3],['id' => $vote['id']])->execute();                }            }            else if($vote['state'] == 2)            {                $vs = Votes::findOne(['won' => 1,'game_id' => $vote['game_id']]);                $winners = Winners::findOne(['user_id' => \Yii::$app->user->id,'game_id' => $vs['game_id']]);                $mems = Members::find()->where(['game_id' => $vs['game_id'],'accepted'=> 1])->all();                $m = Members::findOne(['game_id' => $vs['game_id'],'accepted'=> null,'user_id' => \Yii::$app->user->id]);                if ($winners == null)                {                    if ($m == null || $m['accepted'] == null)                    {                        echo '<div class="col-md-12 col-xs-12 col-sm-12"><center><span>Согласны ли вы пойти на "'.$vs['name'].'" в '.$vs['time'].' </span></center><button class="col-md-6 col-xs-6 col-sm-6 btn btn-success" onclick="acceptv(\''.$vs['id'].'\')">Принять</button><button onclick="decline(\''.$vs['id'].'\')" class="btn btn-danger col-md-6 col-xs-6 col-sm-6">Отказаться</button><div>Список участников:';                        foreach ($mems as $ms)                        {                            $user = User::findOne(['id' => $ms['user_id']]);                            echo '<b> '.$user['username'].'</b>';                        }                        echo '</div>';                        echo '</div>';                    }                    else                    {                        echo '<div class="col-md-12 col-xs-12 col-sm-12"><center><span>Согласны ли вы пойти на'.$vs['name'].' в '.$vs['time'].'</span></center><button class="col-md-6 col-xs-6 col-sm-6 btn btn-success" disabled onclick="acceptv(\''.$vs['id'].'\')">Принять</button><button onclick="decline(\''.$vs['id'].'\')" disabled class="btn btn-danger col-md-6 col-xs-6 col-sm-6">Отказаться</button><div>Список участников:';                        foreach ($mems as $m)                        {                            $user = User::findOne(['id' => $m['user_id']]);                            echo '<b>'.$user['username'].'</b>';                        }                        echo '</div>';                        echo '</div>';                    }                }                echo 'Вторая фаза <span id="timer"></span>';            }        }        else        {            return false;        }    }    public function actionRemdia()    {        $vote = Vote::find()->orderBy(['id' => SORT_DESC])->one();        \Yii::$app->db->createCommand()->update('vote',['state' => 2],['id' => $vote['id']])->execute();    }    public function actionPred()    {        $name = \Yii::$app->request->post('field');        $words =Words::find()->all();        foreach ($words as $word)        {            $w = $word['word'];            $preg = preg_match('/^'.ucfirst($name).'/',ucfirst($w),$matches);           if ($preg)           {               echo '<button class="btn col-md-12 col-xs-12 col-sm-12"  onclick="predes(\'' . $w . '\')" >'.$w.'</button>';           }        }    }    public function actionAccept()    {        $id = \Yii::$app->request->post('id');        $vote = Votes::findOne(['id' => $id]);        $game = Vote::findOne(['id' => $vote['game_id']]);        \Yii::$app->db->createCommand()->insert('members',['user_id' => \Yii::$app->user->id,'game_id' => $game['id'],'accepted' => 1])->execute();    }    public function actionDecline()    {        $id = \Yii::$app->request->post('id');        $vote = Votes::findOne(['id' => $id]);        $game = Vote::findOne(['id' => $vote['game_id']]);        \Yii::$app->db->createCommand()->insert('members',['user_id' => \Yii::$app->user->id,'game_id' => $game['id'],'accepted' => 0])->execute();    }    public function actionVote()    {        $time = \Yii::$app->request->post('time');        $name = \Yii::$app->request->post('name');        $vote = Vote::find()->orderBy(['id' => SORT_DESC])->one();        \Yii::$app->db->createCommand()->insert('votes',['user_id' => \Yii::$app->user->id,'time' => $time,'name' => $name,'game_id' => $vote['id']])->execute();        $mer = explode(' ',$name);        for($i = 0;$i < count($mer);$i++)        {            $word = Words::findOne(['word' => $mer[$i]]);            if ($word == null)            {                \Yii::$app->db->createCommand()->insert('words',['word' => $mer[$i]])->execute();            }        }    }    public function actionUtimer()    {        $vote = Vote::find()->orderBy(['id' => SORT_DESC])->one();        $votes = Votes::findAll(['game_id' => $vote['id']]);        $data = [];        if ($vote["state"] == 0)        {            $timer = $vote['p1'];            $data = ['timer' => $timer,'votes' => count($votes)];        }        else if ($vote["state"] == 2)        {            $timer = $vote['p2'];            $data = ['timer' => $timer,'votes' => count($votes)];        }        return json_encode($data);    }    public function actionTimer()    {        $vote = Vote::find()->orderBy(['id' => SORT_DESC])->one();        if ($vote != null)        {            if ($vote["state"] == 0) {                $timer = $vote['p1'];                if ($timer > 0) {                    $timer = $vote['p1'] - 1;                    \Yii::$app->db->createCommand()->update('vote', ['p1' => $timer], ['id' => $vote['id']])->execute();                    return $timer;                }                else                {                    \Yii::$app->db->createCommand()->update('vote', ['state' => 1], ['id' => $vote['id']])->execute();                }            }            else if ($vote["state"] == 2)            {                $timer = $vote['p2'];                if ($timer > 0) {                    $timer = $vote['p2'] - 1;                    \Yii::$app->db->createCommand()->update('vote', ['p2' => $timer], ['id' => $vote['id']])->execute();                    return $timer;                }                else                {                    \Yii::$app->db->createCommand()->update('vote', ['p2' => $timer,'state' =>3], ['id' => $vote['id']])->execute();                }            }        }        else        {            return false;        }    }}